@model IEnumerable<CRUDoperation.Models.EmployeeModel>
@* @model CRUDoperation.Models.EmployeeModel; *@
@* @model AspWebApp.Pages.EmployeeModel *@
@{
    ViewData["Title"] = "Employee Details";
   }
   <div class="col-xl-12" style="display: flex; justify-content: space-between;">
    <h2>@ViewData["Title"]</h2>

    <p>
         @* <a asp-action="Create" class="btn btn-primary btn-sm">ADD</a> *@
    <button type="button"  class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
        ADD
    </button>
    
    </p>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">

                <form action="create" id="ADDemp" enctype="multipart/form-data">

                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name : </label>
                        <input id="firstName" type="text" name="firstName" class="form-control" />
                       @*  <span asp-validation-for="firstName"></span> *@
                    </div>
                     
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name : </label>
                        <input id="lastName" type="text" name="lastName" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="contactNumber" class="form-label">Contact Number : </label>
                        <input id="contactNo" type="text" name="contactNumber" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="emailId" class="form-label">Email Id : </label>
                        <input id="emailId" type="email" name="emailId" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="age" class="form-label">Age : </label>
                        <input id="age" type="number" name="age" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="imageFile" class="form-label">Image : </label>
                        <input id="imageFile" name="imageFile"  type="file" class="form-control">
                    </div>

                    @* <button type="submit" id="btns" class="btn btn-outline-primary mb-3">Submit</button> *@
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" onclick="AddEmployee()" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
             

        </div>
    </div>
</div>

<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Edit Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="updateform">
                <input hidden id="updateemp_id" />
               

                <div class="mb-3">
                    <label for="firstName" class="form-label">First Name : </label>
                        <input id="updatedFirstName" type="text" name="firstName" class="form-control" autocomplete="off" />
                </div>

                <div class="mb-3">
                    <label for="lastName" class="form-label">Last Name : </label>
                        <input id="updatedlastName" type="text" name="lastName" class="form-control" autocomplete="off" />
                </div>

                <div class="mb-3">
                    <label for="contactNumber" class="form-label">Contact Number : </label>
                        <input id="updatedcontactNumber" type="tel" name="contactNo" class="form-control" autocomplete="off" />
                </div>

                <div class="mb-3">
                    <label for="emailId" class="form-label">Email Id : </label>
                        <input id="updatedemailId" type="email" name="emailId" class="form-control" autocomplete="off" />
                </div>

                <div class="mb-3">
                    <label for="age" class="form-label">Age : </label>
                        <input id="updatedage" type="number" name="age" class="form-control" autocomplete="off" />
                </div>

                <div class="row">
                    <div class="col-12">
                        <label for="updatedimageFile" class="form-label">Profile Image</label>
                        <input id="updatedimageFile" name="imageFile" type="file" class="form-control" onchange="previewImage(this)">
                        <!-- Image preview -->
                        <img id="imagePreview_u" src="#" alt="Image Preview" style="max-width: 100%; max-height: 150px; margin-top: 10px; display: none;">
                    </div>
                </div>
                
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="updateEmployee()" class="btn btn-primary">Save changes</button>
            </div>

        </div>
    </div>
</div>


<div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">View Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="updateform">
                <label for="viewemp_id" class="form-label">EmployeeID : </label>
                <input id="viewemp_id" type="text" name="viewemp_id" class="form-control" readonly />
              
                <div class="mb-3">
                    <label for="viewFirstName" class="form-label">First Name : </label>
                    <input id="viewFirstName" type="text" name="viewFirstName" class="form-control" readonly/>
                </div>

                <div class="mb-3">
                    <label for="lastName" class="form-label">Last Name : </label>
                    <input id="viewlastName" type="text" name="lastName" class="form-control" readonly />
                </div>

                <div class="mb-3">
                    <label for="contactNumber" class="form-label">Contact Number : </label>
                    <input id="viewcontactNumber" type="tel" name="contactNo" class="form-control" readonly />
                </div>

                <div class="mb-3">
                    <label for="emailId" class="form-label">Email Id : </label>
                    <input id="viewemailId" type="email" name="emailId" class="form-control" readonly />
                </div>

                <div class="mb-3">
                    <label for="age" class="form-label">Age : </label>
                    <input id="viewage" type="number" name="age" class="form-control" readonly />
                </div>

                <div class="mb-3">
                        <label for="imageFile" class="form-label">Image : </label><br />
                        <input id="viewimageFile" name="imageFile" type="file" class="form-control" onchange="previewImage(this)" hidden>
                        <!-- Image preview -->
                        <img id="imagePreview_r" src="#" alt="Image Preview" style="max-width: 100%; max-height: 150px; margin-top: 10px; display: none;">
                </div>
                 </form >
                @* <button type="submit" id="btns" class="btn btn-outline-primary mb-3">Submit</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                @* <button type="button" onclick="updateEmployee()" class="btn btn-primary">Save changes</button> *@
            </div>

        </div>
    </div>
</div>



<table class ="table table-striped" id="myTable" style="width:100% !important">
    <thead class="table-dark">
            <tr>
               @*  <th>#</th> *@
                <th>emp_id</th>
                <th>first_name</th>
                <th>last_name</th>
                <th>contact</th>
                <th>email</th>
                <th>emp_age</th>
                <th>image</th>
                <th>Action</th>
            </tr>

        </thead>
       
    </table>

<script>

    $(document).ready(function () {
        debugger;
        get();
    });

    function get(){

        // Destroy the existing DataTable
        if ($.fn.DataTable.isDataTable('#myTable')) {
            $('#myTable').DataTable().destroy();
        }

        $.ajax({
            type: "GET",
            url: "Employee/EmployeeList",
            // data: 'first_name=' + firstname + '&last_name=' + lastname + '&contact=' + contactno + '&email=' + emailid + '&age=' + age + '&image=' + image,
            success: function (data) {
                $('#myTable').DataTable({
                    data: data,
                    columns: [
                        { data: 'id' },
                        { data: 'firstName' },
                        { data: 'lastName' },
                        { data: 'contactNo' },
                        { data: 'emailId' },
                        { data: 'age' },
                        {
                            data: 'imagePath',
                            render: function (data, type, row) {
                                return '<img src="/images/' + data + '"class="rounded-image" width="35px" height="35px" />';
                            }
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return ` <button type="button" onclick="popupdateData(` + row.id + `)" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateModal">edit</button>|<button type="button" onclick="viewData(` + row.id + `)" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#viewModal">View</button>|<button type="button" onclick="DeleteEmployee(` + row.id + `)" class="btn btn-primary" >Delete</button>`;

                            }
                        }
                    ]
                });
                // Success = true;//doesn't go here
            },
            error: function (textStatus, errorThrown) {
                Success = false; //doesn't go here
            }
        });
    }
    
    function AddEmployee()
    {
        debugger;
        var oModel = {
            firstName: $('#firstName').val(),
            lastName: $('#lastName').val(),
            contactNo: $('#contactNo').val(),
            emailId: $('#emailId').val(),
            age: $('#age').val(),
        }
        debugger;
        var formData = new FormData();
        formData.append("model",JSON.stringify(oModel));
        formData.append("file", $("#imageFile")[0].files[0]);
        
        $.ajax({
            type: "POST",
            url: "/Employee/Create",
            data: formData,
            processData: false,
            contentType: false,
            cache: false,
            // contentType: false, // Important: Don't set contentType to "application/json"

            success: function (data, textStatus, jqXHR) {
                $('#exampleModal').modal('hide');
                Swal.fire({
                    title: "Employee Details Added Sucessfully!",
                    text: "close",
                    icon: "success"
                });

                get();
               
            },
            error: function (jqXHR, textStatus, errorThrown) {  
                Swal.fire({
                    title: "error occured",
                    text: "close",
                    icon: "error"
                });

            },

        });
    }

  function DeleteEmployee(id)
  {
         // var ans = confirm("Are you sure you want to delete this Record?");
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {

                $.ajax({
                    type: "POST",
                    url: "/Employee/Delete/" + id,
                    // contentType: "application/json",
                    // dataType: "json",
                    success: function (result) {
                        alert('Success!');
                        $('#exampleModal').modal('hide');
                        location.reload();
                    },
                    error: function (errormessage) {
                        Swal.fire({
                            title: "error while delete employee",
                            text: "close",
                            icon: "error"
                        });
                    }
                });
            }
        });
  }

    // var employeeIdToUpdate;
    function popupdateData(id) 
    {  
        debugger;
        // employeeIdToUpdate = id;
        $.ajax({
            type: "GET",
            url: "/Employee/Update/" + id,
           success: function (data) {
              debugger;
                $("#updateemp_id").val(id);
                $('#updatedFirstName').val(data.firstName);
                $('#updatedlastName').val(data.lastName);
                $('#updatedcontactNumber').val(data.contactNo);
                $('#updatedemailId').val(data.emailId);
                $('#updatedage').val(data.age);

                var imagePreview = data.imagePath ? '/images/' + data.imagePath : 'Upload Image';
                $('#imagePreview_u').attr('src', imagePreview).show();
               
          },

        });
    }
    
    function updateEmployee() {
        debugger;
        var employeeID = {
            id: $('#updateemp_id').val()
        }

        var updatedModel = {

            firstName: $('#updatedFirstName').val(),
            lastName: $('#updatedlastName').val(),
            contactNo: $('#updatedcontactNumber').val(),
            emailId: $('#updatedemailId').val(),
            age: $('#updatedage').val()
        };

        var formData = new FormData();
        formData.append("Id", employeeID.id);
        formData.append("model", JSON.stringify(updatedModel));
        formData.append("file", $("#updatedimageFile")[0].files[0]);

        debugger;

        $.ajax({
            url: "/Employee/Update1",
            type: "POST",
            data: formData,
            processData: false,
            contentType: false,
            cache: false,
            success: function (data) {
               
                if (data === "Index") {
                    Swal.fire({
                        title: "Employee Details Added Sucessfully!",
                        text: "close",
                        icon: "success"
                    });

                    $('#updateModal').modal('hide');
                    DataTable.destroy();
                    get();
                }
                
                else{
                    Swal.fire({
                        title: "Error while updating!",
                        text: "close",
                        icon: "error"
                    });
                }      
            },
            error: function () {
                Swal.fire({
                    title: "Error while updating!",
                    text: "close",
                    icon: "error"
                });
            }
        });
    }

    function previewImage(input) {
        var file = input.files[0];

        if (file) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imagePreview_u').attr('src', e.target.result).show();
            };

            reader.readAsDataURL(file);
        } else {
            // Clear the image preview if no file is selected
            $('#imagePreview_u').attr('src', '').hide();
        }
    }

    function viewData(id) {
        debugger;
        var employeeID = {
            id: $('#viewemp_id').val()
        }
        $.ajax({
            type: "POST",
            url: "/Employee/Update?id=" + id,
            success: function (data) {
                debugger;

                $("#viewemp_id").val(data.id);
                $('#viewFirstName').val(data.firstName);
                $('#viewlastName').val(data.lastName);
                $('#viewcontactNumber').val(data.contactNo);
                $('#viewemailId').val(data.emailId);
                $('#viewage').val(data.age);

                var imagePreview = data.imagePath ? '/images/' + data.imagePath : 'Upload Image';
                $('#imagePreview_r').attr('src', imagePreview).show();

            },
        });

    }

</script>
    


